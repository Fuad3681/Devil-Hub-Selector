--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.1.6) ~  Much Love, Ferib 

]]--

do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=getfenv or function()return _ENV;end;local v9=setmetatable;local v10=pcall;local v11=select;local v12=unpack or table.unpack;local v13=tonumber;local function v14(v15,v16)local v17=0;local v18;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;while true do if (v17==4) then v27=nil;function v27(...)return {...},v11("#",...);end v28=nil;function v28()local v38=0 -0;local v39;local v40;local v41;local v42;local v43;local v44;local v45;while true do if ((2 -1)~=v38) then else v41=nil;v42=nil;v38=1 + 1;end if (v38==3) then v45=nil;while true do if (v39==(422 -(129 + 292))) then local v76=0 -0;local v77;while true do if (v76~=(362 -(180 + 182))) then else v77=913 -(821 + 92);while true do if (v77==(3 -1)) then v39=1491 -(1421 + 68);break;end if (v77~=1) then else local v97=0 + 0;while true do if (v97~=(0 + 0)) then else for v103=2 -1,v44 do local v104=0;local v105;local v106;local v107;local v108;while true do if (v104~=2) then else while true do if ((688 -(74 + 614))~=v105) then else v106=85 -(29 + 56);v107=nil;v105=1;end if (v105~=(1 + 0)) then else v108=nil;while true do if (v106==(0 + 0)) then local v122=337 -(182 + 155);while true do if (v122~=(1 + 0)) then else v106=1;break;end if ((653 -(587 + 66))==v122) then local v180=1866 -(973 + 893);while true do if (v180==(0 -0)) then v107=v21();v108=nil;v180=1;end if (v180~=(1545 -(784 + 760))) then else v122=4 -3;break;end end end end end if (v106==1) then if (v107==(1 + 0)) then v108=v21()~=(0 + 0);elseif (v107==2) then v108=v24();elseif (v107==(1 + 2)) then v108=v25();end v45[v103]=v108;break;end end break;end end break;end if (v104==(0 -0)) then v105=0;v106=nil;v104=1;end if (v104==(1 + 0)) then v107=nil;v108=nil;v104=2;end end end v43[3]=v21();v97=1 + 0;end if (v97==1) then v77=2;break;end end end if (v77==(196 -(32 + 164))) then local v98=0 + 0;while true do if (v98~=(1 + 0)) then else v77=1;break;end if (0==v98) then v44=v23();v45={};v98=1;end end end end break;end end end if (v39~=(1560 -(1196 + 362))) then else local v78=0 -0;local v79;while true do if ((0 + 0)==v78) then v79=0 + 0;while true do local v81=0 + 0;while true do if (v81~=0) then else if (0==v79) then for v109=1 + 0,v23() do local v110=0 + 0;local v111;local v112;while true do if (v110==(1942 -(1378 + 564))) then v111=713 -(591 + 122);v112=nil;v110=1 + 0;end if ((1433 -(17 + 1415))==v110) then while true do if (v111~=(615 -(436 + 179))) then else v112=v21();if (v20(v112,745 -(397 + 347),2 -1)==(0 + 0)) then local v117=0 + 0;local v118;local v119;local v120;local v121;while true do if (v117==(1776 -(1436 + 340))) then v118=0 + 0;v119=nil;v117=1;end if (v117~=(2 -1)) then else v120=nil;v121=nil;v117=194 -(26 + 166);end if (v117~=(6 -4)) then else while true do if (v118~=2) then else local v184=0 + 0;while true do if (v184==0) then if (v20(v120,1 -0,1214 -(1205 + 8))~=(227 -(30 + 196))) then else v121[6 -4]=v45[v121[2 + 0]];end if (v20(v120,1146 -(872 + 272),3 -1)~=(1 + 0)) then else v121[3]=v45[v121[226 -(71 + 152)]];end v184=2 -1;end if (v184==1) then v118=2 + 1;break;end end end if (v118~=(2 + 1)) then else if (v20(v120,5 -2,6 -3)==1) then v121[4]=v45[v121[877 -(447 + 426)]];end v40[v109]=v121;break;end if (v118==(467 -(208 + 259))) then v119=v20(v112,4 -2,3);v120=v20(v112,4,11 -5);v118=169 -(39 + 129);end if (v118==(1 + 0)) then local v186=1549 -(62 + 1487);while true do if (v186==(0 + 0)) then v121={v22(),v22(),nil,nil};if (v119==(0 -0)) then local v220=19 -(13 + 6);local v221;local v222;local v223;while true do if (v220==(1 + 0)) then v223=nil;while true do if ((0 -0)==v221) then v222=1164 -(188 + 976);v223=nil;v221=1 -0;end if (v221==(2 -1)) then while true do if (v222~=(0 -0)) then else v223=0 + 0;while true do if (v223~=0) then else v121[1004 -(386 + 615)]=v22();v121[1772 -(510 + 1258)]=v22();break;end end break;end end break;end end break;end if (v220==(0 + 0)) then v221=0 -0;v222=nil;v220=1 + 0;end end elseif (v119==(1854 -(1507 + 346))) then v121[6 -3]=v23();elseif (v119==(2 -0)) then v121[2 + 1]=v23() -((1255 -(55 + 1198))^(14 + 2));elseif (v119==(2 + 1)) then local v248=0;local v249;local v250;while true do if (v248==(2 -1)) then while true do if ((594 -(469 + 125))~=v249) then else v250=0;while true do if (v250~=0) then else v121[3 + 0]=v23() -((2 -0)^(633 -(171 + 446)));v121[3 + 1]=v22();break;end end break;end end break;end if (v248~=(0 -0)) then else v249=0 -0;v250=nil;v248=1 + 0;end end end v186=1 + 0;end if (v186==1) then v118=2;break;end end end end break;end end end break;end end break;end end end for v113=369 -(183 + 185),v23() do v41[v113-(826 -(605 + 220))]=v28();end v79=1;end if (v79==(1 + 0)) then local v102=0 -0;while true do if (v102==(0 -0)) then for v115=1,v23() do v42[v115]=v23();end return v43;end end end break;end end end break;end end end if (v39==(0 -0)) then local v80=0;while true do if (v80==(1063 -(161 + 901))) then v42={};v43={v40,v41,nil,v42};v80=3 -1;end if ((1344 -(105 + 1237))==v80) then v39=1;break;end if (v80==(0 -0)) then v40={};v41={};v80=1;end end end end break;end if (v38==(0 + 0)) then v39=0;v40=nil;v38=1710 -(1258 + 451);end if (v38==(2 + 0)) then v43=nil;v44=nil;v38=2 + 1;end end end v17=5;end if (v17==5) then v29=nil;function v29(v30,v31,v32)local v46=0;local v47;local v48;local v49;while true do if (v46==0) then v47=v30[1];v48=v30[2];v46=1;end if (v46==1) then v49=v30[3];return function(...)local v70=0;local v71;local v72;local v73;local v74;local v75;while true do if (v70==0) then v71=1;v72= -1;v70=1;end if (v70==1) then v73={...};v74=v11("#",...) -1;v70=2;end if (v70==2) then v75=nil;function v75()local v82=v47;local v83=Const;local v84=v48;local v85=v49;local v86=v27;local v87={};local v88={};local v89={};for v94=0,v74 do if ((v94>=v85) or ((1411 -(164 + 963))>(5 + 496))) then v87[v94-v85]=v73[v94 + 1];else v89[v94]=v73[v94 + (303 -((1531 -(595 + 664)) + 30))];end end local v90=(v74-v85) + 1;local v91;local v92;while true do local v95=0 -0;local v96;while true do if ((1635<=(4705 + 287)) and (v95==(0 + 0))) then v96=0 -0;while true do if ((v96==(0 + 0)) or ((953 + 375)<1049)) then v91=v82[v71];v92=v91[1 + (0 -0)];v96=1;end if ((2613==(3614 -(676 + 325))) and (v96==1)) then if ((v92<=(3 + 12)) or ((1220 + 634)>=(10647 -6348))) then if (((4815 + 29)>(3562 + 302)) and (v92<=(24 -17))) then if ((v92<=(7 -4)) or ((2016 -(342 + 796))>((2303 -(982 + 193)) + 1999))) then if ((v92<=1) or ((1730 -783)>3876)) then if ((v92==(0 -0)) or ((2042 + 1992)==(5836 -((1122 -(381 + 721)) + 1875)))) then v89[v91[488 -(145 + 341)]]=v91[3 + 0];else do return;end end elseif ((v92>(1 + 1)) or ((3079 -1891)<=(112 + 662))) then local v125=0;local v126;local v127;local v128;local v129;local v130;local v131;while true do if (((1306 -(1198 + 106))==v125) or ((5376 -3241)==((10152 -7540) + 1933))) then v130=nil;v131=nil;v125=2 + 1;end if ((1320>=699) and (v125==(2 -1))) then v128=nil;v129=nil;v125=3 -1;end if ((v125==0) or (((25087 -18301) -3407)<(1419 + 327))) then v126=1056 -(567 + 489);v127=nil;v125=1 + 0;end if ((v125==(950 -(242 + (2040 -(170 + 1165))))) or ((3893 -(141 + 444))==(4934 -2473))) then while true do if (((869 + 245)==(1272 -(91 + 67))) and ((1526 -(1285 + 240))==v126)) then local v203=(0 -0) + 0;while true do if ((v203==(2 -1)) or ((4645 -((1995 -1198) + 115))<=(2484 -(350 + 596)))) then v126=1 + 1;break;end if ((v203==(0 + 0)) or (2909<2370)) then v129=nil;v130=nil;v203=1 -0;end end end if ((999<(3154 -(411 + 484))) and (v126==(164 -(23 + 139)))) then v131=nil;while true do if ((v127==((1697 -(596 + 1099)) + 0)) or (2433>=(396 + 3206))) then for v232=v128,v72 do local v233=799 -(178 + 501 + 120);local v234;while true do if ((746>(2235 -((2848 -(27 + 1616)) + 663))) and (v233==(0 + 0))) then v234=0 + (1951 -(259 + 1692));while true do if ((3224<=(19658 -14947)) and (v234==0)) then v131=v131 + ((1348 -475) -(562 + 310));v89[v232]=v129[v131];break;end end break;end end end break;end if (((10778 -6642)>=(96 + 173)) and (v127==1)) then local v224=873 -(122 + 751);local v225;while true do if (((0 -0)==v224) or ((5972 -((1636 -(451 + 168)) + 673))<=1405)) then v225=0 + 0;while true do if (((5815 -(249 + 826))>=2925) and ((0 -0)==v225)) then v72=(v130 + v128) -(1 + 0);v131=0;v225=1 + 0;end if ((v225==(96 -((657 -(561 + 53)) + 52))) or ((12445 -7699)==664)) then v127=3 -1;break;end end break;end end end if ((v127==0) or ((2999 + (1934 -852))>4823)) then local v226=0;while true do if (((4871 -((703 -549) + 687))>=3702) and (v226==(0 -0))) then v128=v91[2 -0];v129,v130=v86(v89[v128](v12(v89,v128 + (2 -1),v91[2 + 1])));v226=(1 -0) -0;end if (((10284 -5375)>=(2868 + 931)) and (((1 + 1) -1)==v226)) then v127=1 + (0 -0);break;end end end end break;end if (((885 + 1204 + 957)==(4588 -(741 + 801))) and (v126==((0 -0) -0))) then v127=0;v128=nil;v126=1 + 0;end end break;end end else v89[v91[661 -(598 + 61)]]=v32[v91[313 -(77 + 233)]];end elseif ((v92<=(7 -2)) or ((5271 -2312)<(1031 + 1720))) then if ((2907>(272 + 1407 + 178)) and (v92>(8 -4))) then for v181=v91[2 + 0],v91[3] do v89[v181]=nil;end else local v133=0 -0;local v134;while true do if ((v133==0) or ((424 + 692)<918)) then v134=v91[(1911 -(225 + 63)) -(1243 + 378)];v89[v134](v89[v134 + 1]);break;end end end elseif (((601 + 112)==(1836 -(295 + 828))) and (v92>(550 -(137 + 407)))) then v71=v91[3];else v32[v91[507 -(451 + 53)]]=v89[v91[2]];end elseif (((1804 -(1152 + 449))==(39 + 164)) and (v92<=(43 -32))) then if ((1624>(6725 -5167)) and (v92<=(7 + 2))) then if (((13568 -10785)<=2827) and (v92>(25 -17))) then v89[v91[6 -4]]=v89[v91[11 -8]] + v89[v91[1646 -(1320 + 322)]];else local v137=0;local v138;local v139;local v140;while true do if (((349 + 85)==((996 -564) + 2)) and (v137==(0 -0))) then local v187=0 + 0;while true do if ((1807>(1335 -(15 + 3))) and ((1905 -(1114 + 790))==v187)) then v137=2 -1;break;end if (((9787 -6578)>=2930) and (v187==(0 + 0))) then v138=v91[2 + 0];v139={v89[v138](v89[v138 + 1 + 0])};v187=1;end end end if ((v137==(2 -1)) or ((10816 -6165)<=(3330 -1586))) then v140=1510 -(286 + 1224);for v191=v138,v91[4] do local v192=(1741 + 72) -(372 + 1441);local v193;while true do if (((4613 -((756 -223) + 426))==(1947 + 1707)) and (v192==(0 -0))) then v193=0 + 0;while true do if (((10905 -7551)>(1739 -(881 + 129))) and (v193==(0 + 0))) then v140=v140 + (1 -0);v89[v191]=v139[v140];break;end end break;end end end break;end end end elseif (((4881 -(1214 + 242))>=(4576 -((247 -88) + 1396))) and (v92==(15 -5))) then local v141=0 -(1404 -(1045 + 359));local v142;local v143;while true do if (((1152 -(124 + 415))<(1705 + 429)) and (v141==(0 -0))) then v142=0 + 0 + 0 + 0;v143=nil;v141=2 -1;end if ((v141==1) or (((29570 -20890) -5430)<(7021 -3986))) then while true do if (((3268 -2251)>=(527 -313)) and ((0 + 0)==v142)) then v143=v91[1 + 1 + 0];v89[v143]=v89[v143](v12(v89,v143 + 1 + 0,v91[3 + 0]));break;end end break;end end else v89[v91[761 -(46 + 713)]]=v91[1917 -(1476 + 438)]~=(1125 -(1045 + 80));end elseif ((v92<=(18 -(7 -2))) or ((4252 + 106)>=(864 + 4091))) then if (((2616 -1461)<1257) and (v92==(10 + 2))) then if ((4522>=(3661 -(239 + 9))) and (v89[v91[32 -(9 + 3 + (392 -(241 + 133)))]]==v89[v91[4]])) then v71=v71 + ((865 -(784 + 80)) -0);else v71=v91[185 -(75 + 107)];end elseif ((v89[v91[649 -(283 + 364)]]~=v91[1005 -(539 + 462)]) or ((11305 -6695)<=2126)) then v71=v71 + (2 -1);else v71=v91[2 + (1915 -(1714 + 200))];end elseif ((4394==(8027 -(1078 + 2555))) and (v92==14)) then v89[v91[2]]=v31[v91[3 + 0]];else local v146=0 + 0;local v147;local v148;local v149;local v150;while true do if (((2492 + 1216)>=(4219 -(1083 + 442))) and (v146==(0 + 0))) then v147=0 + (0 -0);v148=nil;v146=3 -2;end if (((3372 -(637 + 764))==(3495 -(978 + 546))) and (v146==1)) then v149=nil;v150=nil;v146=1343 -(600 + 741);end if ((v146==(4 -(2 + 0))) or ((3190 -((70 -19) + 41))==(1922 -(94 + 196)))) then while true do if (((1 + 1)==v147) or ((19043 -14928)<=(3931 -(835 + 17)))) then for v211=1,v91[(13 -8) -1] do local v212=(0 -0) -0;local v213;local v214;local v215;while true do if ((v212==(1731 -(573 + 1157))) or ((14417 -9814)>4886)) then v215=nil;while true do if (((1 + 0)==v213) or ((1913 + 626 + 489)<=(903 + 472))) then while true do if ((2125==(4747 -2622)) and (v214==(0 -0))) then local v260=0 + (30 -(15 + 15));local v261;while true do if (((5598 -1362)>(2215 + 729)) and (v260==(0 + 0))) then v261=0 -0;while true do if ((v261==(1940 -(1464 + 475))) or ((10828 -7933)>=(6226 -(476 + 1293)))) then v214=1 + 0;break;end if ((1655==1655) and ((1888 -(1538 + 350))==v261)) then v71=v71 + (3 -2) + 0;v215=v82[v71];v261=1 + 0;end end break;end end end if ((((16626 -12906) -(496 + 143))==(6315 -3234)) and (v214==(1 -0))) then if ((v215[1 -0]==(79 -62)) or ((1456 -(468 + 173))>(2859 -1068))) then v150[v211-((2260 -(427 + 142)) -(40 + 1650))]={v89,v215[6 -3]};else v150[v211-(4 -3)]={v31,v215[6 -3]};end v88[ #v88 + 1 + 0]=v150;break;end end break;end if ((v213==(0 + 0)) or ((5404 -3184)>=3033)) then v214=0;v215=nil;v213=(250 -(31 + 216)) -2;end end break;end if ((4818>=(1461 -(1052 + 76))) and (v212==(354 -(169 + 185)))) then v213=0 -0;v214=nil;v212=1 -0;end end end v89[v91[2]]=v29(v148,v149,v32);break;end if ((4831>(1276 + 1412)) and (v147==(0 + 0))) then v148=v84[v91[1 + 2]];v149=nil;v147=1111 -(340 + 770);end if (((280 + 684)==((3263 -(361 + 272)) -(236 + 1430))) and (v147==(1268 -(751 + 516)))) then local v206=0 + 0;while true do if (((3425 -(357 + 211))<(5346 -(364 + 87))) and (v206==((0 -0) + 0))) then v150={};v149=v9({},{__index=function(v236,v237)local v242=0;local v243;while true do if ((((4231 -3084) -(213 + 587))==(129 + 218)) and (v242==(0 -(776 -(336 + 440))))) then local v251=0;while true do if (((74 + 3517 + 473)>=((1624 -(719 + 42)) + 2286)) and ((1761 -(563 + 1198))==v251)) then v243=v150[v237];return v243[(1 + 1) -(1 + 0)][v243[8 -6]];end end end end end,__newindex=function(v238,v239,v240)local v244=0 + 0;local v245;local v246;while true do if ((v244==(2 -1)) or ((17415 -(22953 -10124))==(8006 -5095))) then while true do if ((((2242 -(1009 + 482)) -546)<(2061 -(177 + 212))) and (v245==(0 -0))) then v246=v150[v239];v246[1 + (0 -0)][v246[835 -(241 + (1156 -564))]]=v240;break;end end break;end if (((651 + 117 + 1191)<(3328 -(281 + 27))) and (v244==0)) then v245=285 -((1940 -(933 + 730)) + 8);v246=nil;v244=2 -1;end end end});v206=1;end if (((2259 + 1631)>=(715 + 300)) and (v206==(2 -1))) then v147=4 -2;break;end end end end break;end end end elseif ((v92<=(12 + 11)) or ((1793 -(15 + 4 + 1))>=(2441 + 182))) then if ((v92<=((747 -(137 + 555)) -36)) or (4808==(8 + 311))) then if ((v92<=((65 -42) -6)) or ((5539 -(504 + 1089))==(1902 + 826))) then if (((6815 -5283)<=(4751 -(210 + 591))) and (v92==(12 + 4))) then local v151=0 + 0;local v152;local v153;local v154;local v155;local v156;while true do if ((v151==(1155 -(336 + 817))) or ((864 + 1170)>=2454)) then local v188=0 -0;while true do if (((3370 + 48 + 612)<(4763 -(146 + 293))) and (v188==0)) then for v216=463 -(388 + 74),v153 do v89[v154 + v216]=v155[v216];end v156=v155[3 -2];v188=386 -((1961 -(516 + 1372)) + (1174 -862));end if ((v188==((7 -3) -3)) or ((2356 -(65 + 977))>(3865 -(282 + 940)))) then v151=1897 -(105 + 1789);break;end end end if ((v151==(0 + 0)) or ((1452 -(233 + 368))>(392 + 4114))) then v152=v91[5 -3];v153=v91[2 + (345 -(279 + 64))];v151=1 -0;end if ((2515<=(1524 + 3063)) and (v151==(3 + 0))) then if (v156 or ((755 -((1388 -(1160 + 202)) + 156))<=(33 + (672 -(350 + 87))))) then local v200=0;local v201;local v202;while true do if (((1 + 0)==v200) or (((12605 -4609) -5245)>=(1864 + 2592))) then while true do if (((348 + 238 + 245)<=(129 + 4637)) and (v201==(0 + 0))) then v202=0 -0;while true do if ((v202==0) or (2825==(5281 -(1205 + 882)))) then v89[v154]=v156;v71=v91[1972 -(194 + 1775)];break;end end break;end end break;end if ((v200==(1703 -(591 + 1112))) or ((1463 + 942)>(5157 -2584))) then v201=0 -0;v202=nil;v200=52 -(24 + 27);end end else v71=v71 + (1244 -(160 + 1083));end break;end if ((v151==(1 -0)) or ((4668 -(103 + 160))<=(2511 -1745))) then local v189=0 -(1069 -(810 + 259));while true do if (((4306 -3418)<((4468 + 1931) -(1519 + 242))) and (v189==(2 -1))) then v151=3 -1;break;end if ((v189==(0 -0)) or (3880<(468 + 507))) then v154=v152 + 2;v155={v89[v152](v89[v152 + (4 -3)],v89[v154])};v189=1991 -(1663 + 327);end end end end else v89[v91[3 -(1 -0)]]=v89[v91[3 -0]];end elseif ((3657>((977 -(134 + 125)) -530)) and (v92>(14 + 4))) then v89[v91[(185 + 1370) -(51 + 1502)]][v91[911 -(10 + 898)]]=v89[v91[4]];else local v159=0;local v160;local v161;while true do if ((((8571 -3067) -(13444 -9888))>55) and (v159==(75 -(50 + 25)))) then v160=120 -(112 + 8);v161=nil;v159=1;end if ((v159==(1724 -(245 + 1478))) or ((8894 -6664)<(1669 -(676 + 474)))) then while true do if ((1295==(2356 -(490 + 571))) and (0==v160)) then v161=v91[5 -3];v89[v161]=v89[v161]();break;end end break;end end end elseif ((v92<=((1 + 77) -57)) or ((128 + 1468)>4373)) then if ((1743<=3291) and (v92==(36 -16))) then if (((39 + (269 -(71 + 56)))<1027) and (v89[v91[3 -1]]==v91[1453 -(366 + 1083)])) then v71=v71 + 1 + 0;else v71=v91[12 -9];end else local v162=0;local v163;local v164;local v165;local v166;while true do if ((v162==(1044 -(1036 + 7))) or ((4767 -((147 -81) + 1426))==403)) then v165=nil;v166=nil;v162=2;end if ((v162==(0 -0)) or ((5510 -(1223 + 776))>=3701)) then v163=0 -0;v164=nil;v162=3 -2;end if (((1014 + 2328)==(6005 -2663)) and (v162==(1512 -((3337 -1932) + 105)))) then while true do if ((v163==1) or ((345 + 1369)>(11300 -7258))) then v166=nil;while true do if ((v164==(0 + 0)) or ((2126 -(259 + 1215))==(17 + 1594))) then local v227=1435 -(1300 + 135);local v228;while true do if (((21436 -17141)>=(67 -51)) and (v227==(0 + 0))) then v228=0 + 0;while true do if ((v228==(0 + 0)) or (2499==(658 + 647))) then v165=v91[1 + 1];v166=v89[v91[2 + 1]];v228=2 -1;end if (((1022 + 2488)==(3421 + 89)) and (v228==(3 -2))) then v164=1217 -(1180 + 36);break;end end break;end end end if ((438<(4086 -(42 + 1524))) and (v164==1)) then v89[v165 + (705 -(166 + 538))]=v166;v89[v165]=v166[v91[4]];break;end end break;end if (((3284 -(679 + 158))>=(9130 -6721)) and (0==v163)) then local v208=1747 -(631 + 1116);while true do if ((3532<=(4719 -(877 + 175))) and (v208==(891 -(530 + 360)))) then v163=26 -(11 + 14);break;end if ((v208==(1930 -(409 + 1521))) or ((267 + 323)<(247 + 3))) then v164=114 -(53 + 61);v165=nil;v208=1;end end end end break;end end end elseif (((7364 -4787)<(421 + 2258)) and (v92>(666 -(581 + 63)))) then v89[v91[2 + 0]]();else local v167=0 + 0;local v168;while true do if (((2922 + 1580)>(2866 + (1052 -(428 + 483)))) and (v167==0)) then v168=v91[1 + 1];v89[v168](v12(v89,v168 + (4 -3),v91[(1 + 6) -4]));break;end end end elseif ((v92<=27) or ((67 + 392)>(3483 + 1033))) then if ((v92<=25) or (1077<=(27 + 3))) then if ((3416>=(1534 -(311 + 121))) and (v92==24)) then v89[v91[2 + 0]][v91[11 -8]]=v91[4];else local v170=0 -0;local v171;local v172;while true do if ((v170==(3 -(4 -2))) or (753<(2272 -1793))) then for v194=2 -1, #v88 do local v195=0 -0;local v196;local v197;local v198;while true do if ((379<=(4377 + 287)) and (v195==(0 + 0))) then v196=409 -(329 + 80);v197=nil;v195=1;end if (((2042 + 2817)>3983) and (v195==(953 -(545 + 407)))) then v198=nil;while true do if (((1863 -(1295 + 150))<=(3145 -1838)) and ((0 -0)==v196)) then local v241=0 -0;while true do if ((v241==(1 + 0)) or ((1665 + 1040)<=(2791 -(146 + 1843)))) then v196=1 + 0;break;end if ((357<2729) and (v241==0)) then v197=1258 -(1189 + 69);v198=nil;v241=1 + 0;end end end if ((v196==(2 -(3 -2))) or ((6062 -3396)>=(4161 -(1110 + 132)))) then while true do if (((255 + 3806)==(3568 + 493)) and (v197==(0 + 0))) then v198=v88[v194];for v253=0 + 0, #v198 do local v254=0 -0;local v255;local v256;local v257;local v258;while true do if ((3489>((3406 -(92 + 662)) -1828)) and (v254==(1 + 0 + 0))) then v257=nil;v258=nil;v254=(869 -(86 + 781)) + 0;end if ((v254==(0 -(26 -(20 + 6)))) or (((941 + 1540) -(1119 + 389))>(1414 + 2828 + 341))) then v255=0 -0;v256=nil;v254=1;end if (((1 + 1)==v254) or ((7815 -4695)==(3204 + 1386))) then while true do if (((637 + 2234)==2871) and (v255==((1377 -(480 + 896)) + 0))) then v258=v256[(2 -1) + 1];if (((v257==v89) and (v258>=v171)) or ((65 + 1421)<(306 + 1122 + 28))) then local v269=0;local v270;while true do if ((v269==(0 + 0)) or (3504==(1517 + 567 + 199))) then v270=0;while true do if ((v270==(1800 -(1732 + (112 -44)))) or ((11345 -6632)<1811)) then v172[v258]=v257[v258];v256[1 + 0]=v172;break;end end break;end end end break;end if ((v255==(153 -(72 + 81))) or ((11399 -6707)<=(8651 -(7746 -(1252 + 739))))) then local v268=220 -(38 + 182);while true do if (((3166 + 309 + 397)>(143 + 1230)) and (v268==((3267 -(319 + 1114)) -(223 + 1611)))) then v256=v198[v253];v257=v256[1];v268=1;end if (((220 -141)<(1339 -(164 + (1554 -(573 + 53))))) and (v268==(2 -1))) then v255=1;break;end end end end break;end end end break;end end break;end end break;end end end break;end if ((0==v170) or ((8407 -4311)<=(5161 -(1309 + 180)))) then local v190=0 + (0 -0);while true do if (((11081 -(14726 -6044))<=(1294 + 3379)) and (v190==1)) then v170=(295 + 609) -(27 + 876);break;end if ((3693>(114 + 319)) and (v190==((901 -(349 + 552)) + (452 -(118 + 334))))) then v171=v91[121 -(47 + 72)];v172={};v190=1 + 0;end end end end end elseif ((v92==(26 + 0)) or ((10562 -6259)<(6 -4))) then v89[v91[2 + 0]]=v29(v84[v91[1 + 1 + 1]],nil,v32);else local v174=0;local v175;local v176;while true do if (((3599 -2145)<(1030 + 3472)) and (v174==1)) then while true do if ((2390<=3221) and (v175==(0 -0))) then v176=v91[2 + 0];v89[v176]=v89[v176](v12(v89,v176 + 1,v72));break;end end break;end if ((3181<=4376) and (v174==0)) then v175=0 -0;v176=nil;v174=1 + (648 -(392 + 256));end end end elseif (((133 + 393)==(1005 -479)) and (v92<=(16 + 13))) then if ((v92==(1544 -(1059 + 457))) or (((35319 -24392) -6958)<=(8477 -5015))) then if ((((23605 -18724) -(74 + 1158))==(2761 + 888)) and (v91[2]==v89[v91[4]])) then v71=v71 + 1 + (0 -0);else v71=v91[1 + 2];end else local v177=0 + 0;local v178;local v179;while true do if ((v177==1) or ((4898 -(240 + (2404 -740)))<=(2545 -(1193 + 281)))) then while true do if ((0==v178) or (489>(3993 + 10))) then v179=v91[(1195 -(244 + 949)) + 0];v89[v179]=v89[v179](v89[v179 + 1 + 0]);break;end end break;end if ((((5184 + 1419) -(1587 + 319))==(11891 -7194)) and (v177==((3217 -(1111 + 613)) -(392 + 1101)))) then v178=199 -(184 + 15 + 0);v179=nil;v177=1757 -(811 + 945);end end end elseif (((10713 -6689)>(671 + 434 + 158)) and (v92<=(15 + 15))) then if ((v89[v91[3 -1]]~=v89[v91[2 + 2 + 0]]) or ((18016 -14084)==(5497 -4318))) then v71=v71 + (1810 -(1649 + 160));else v71=v91[(2006 -(279 + 1719)) -5];end elseif ((v92>(30 + 1)) or ((1697 + 1438)<(1528 -(86 + 588)))) then if (((7032 -3923)<3768) and v89[v91[1574 -(902 + 670)]]) then v71=v71 + 1;else v71=v91[1776 -(681 + 1092)];end else v89[v91[1607 -(714 + 891)]]=v89[v91[3 -0]][v91[4]];end v71=v71 + (370 -(215 + 154));break;end end break;end end end end v70=3;end if (v70==3) then A,B=v27(v10(v75));if  not A[1] then local v93=v30[4][v71] or "?";error("Script error at ["   .. v93   .. "]:"   .. A[2]);else return v12(A,2,B);end break;end end end;end end end return v29(v28(),{},v16)();end if (v17==1) then function v20(v33,v34,v35)if v35 then local v65=(v33/((2 -0)^(v34-1)))%((1780 -((2521 -893) + (385 -235)))^(((v35-(1832 -(770 + 1061))) -(v34-(862 -(420 + 441)))) + 1));return v65-(v65%(2 -1));else local v66=(1 + 1)^(v34-(183 -(152 + 30)));return (((v33%(v66 + v66))>=v66) and ((2 -0) -1)) or (0 + 0);end end v21=nil;function v21()local v50=v1(v15,v18,v18);v18=v18 + 1;return v50;end v22=nil;v17=2;end if (v17==3) then function v24()local v51=v23();local v52=v23();return (( -(7 -5) * v20(v52,32)) + (1349 -(1099 + 249))) * ((2 + 0)^(v20(v52,31 -10,(95 + 25) -89) -((3339 -(518 + 833)) -(377 + 582 + 6)))) * ((((v20(v52,1288 -((1145 -863) + 1005),20) * ((1196 -(534 + 660))^(26 + 6))) + v51)/((2 -0)^52)) + 1 + 0);end v25=nil;function v25(v36)local v53;if  not v36 then v36=v23();if (v36==(0 -0)) then return "";end end v53=v3(v15,v18,(v18 + v36) -1);v18=v18 + v36;local v54={};for v63=1 + 0, #v53 do v54[v63]=v2(v1(v3(v53,v63,v63)));end return v6(v54);end v26=v23;v17=4;end if (v17==2) then function v22()local v55=0;local v56;local v57;while true do if (v55==(0 + 0)) then v56,v57=v1(v15,v18,v18 + ((16 -11) -3));v18=v18 + 2 + 0;v55=2 -1;end if ((1 -0)==v55) then return (v57 * (1589 -((3235 -(14 + 1909)) + 21))) + v56;end end end v23=nil;function v23()local v58=0 -0;local v59;local v60;local v61;local v62;while true do if (v58==0) then v59,v60,v61,v62=v1(v15,v18,v18 + 3);v18=v18 + ((1977 -(640 + 1329)) -4);v58=3 -2;end if ((1 + 0)==v58) then return (v62 * (62540803 -45763587)) + (v61 * (7808 + 57728)) + (v60 * (16 + 240)) + v59;end end end v24=nil;v17=3;end if (v17==0) then v18=1;v19=nil;v15=v4(v3(v15,5),"..",function(v37)if (v1(v37,2)==79) then v19=v0(v3(v37,1,1));return "";else local v67=v2(v0(v37,16));if v19 then local v68=0;local v69;while true do if (v68==0) then v69=v5(v67,v19);v19=nil;v68=1;end if (v68==1) then return v69;end end else return v67;end end end);v20=nil;v17=1;end end end v14("LOL!",v8());end
